#include "Defs.h"


int GetProcID(const char* ProcName){
HANDLE snapshot = CreateToolhelp32Snapshot(TH32CS_SNAPALL,0);

PROCESSENTRY32 current;
current.dwSize = sizeof(PROCESSENTRY32);

if(!Process32First(snapshot,&current)){
    _ERROR("Cant Open First Entry.\n");
    return -1;
}

while(Process32Next(snapshot,&current)){
    if(strcmpi((char*)current.szExeFile,ProcName)==0){
      HEADER2("Process %s has the ID %d",ProcName,current.th32ProcessID);
        return current.th32ProcessID;
    }
}

_ERROR("Process Not Found\n");
return -1;
 
}

HANDLE GetThreadHandle(int pid){
    HANDLE thread = NULL;
    THREADENTRY32 entry;
    entry.dwSize = sizeof(THREADENTRY32);

    HANDLE snapshot = CreateToolhelp32Snapshot(TH32CS_SNAPTHREAD,0);

    if(!Thread32First(snapshot,&entry)){
        _ERROR("No threads present in snapshot ...");
        return NULL;
    }
    
    while(Thread32Next(snapshot,&entry)){
        if(entry.th32OwnerProcessID==pid){
           thread = OpenThread(THREAD_ALL_ACCESS,false,entry.th32ThreadID);
           HEADER2("Got Thread handle");
           return thread;
        }
    }
    _ERROR("No threads found");
    return NULL;
}
